
import asyncio
import logging
import collections

from hikka import loader, utils
from telethon.tl.patched import Message

# Import Gemini API
import google.generativeai as genai
from google.generativeai import types

logger = logging.getLogger(__name__)

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π API-–∫–ª—é—á Gemini
# –û–ß–ï–ù–¨ –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ "–í–ê–®_API_–ö–õ–Æ–ß_GEMINI" –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á –≤ –∫–∞–≤—ã—á–∫–∞—Ö!
GEMINI_API_KEY = "AIzaSyBhXRfIJ6Z79HKHjQiyjo-FQTR65Cxslkc"

# –í–∞—à –Ω–∏–∫–Ω–µ–π–º, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç
MY_NICKNAME = "–∫—Ä–µ–π–∫"

# –ú–æ–¥–µ–ª—å Gemini
GEMINI_MODEL = "gemini-2.5-flash-lite-preview-06-17"

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è Gemini
MAX_HISTORY_MESSAGES = 30
# ---------------------

@loader.tds
class GeminiAutoResponderMod(loader.Module):
    """
    –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ –Ω–∞ –±–∞–∑–µ Google Gemini.
    –í–∫–ª—é—á–∞–µ—Ç—Å—è/–≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π .ii
    –≠–º—É–ª–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–Ω–µ–π–º–æ–º '–∫—Ä–µ–π–∫' –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–º 18 –ª–µ—Ç.
    """

    def __init__(self):
        self.name = "Gemini –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫"
        # self.db –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω Hikka –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ chat_id
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º collections.deque –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
        self.histories = collections.defaultdict(
            lambda: collections.deque(maxlen=MAX_HISTORY_MESSAGES)
        )
        self.gemini_model = None

    async def client_ready(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Gemini –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Hikka.
        """
        # Hikka —Å–∞–º–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ self.db.
        # –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–∑—ã–≤–∞—Ç—å self.get_db() –∏–ª–∏ self.db = None –≤ __init__.
        # –ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º self.db

        if not GEMINI_API_KEY or GEMINI_API_KEY == "–í–ê–®_API_–ö–õ–Æ–ß_GEMINI":
            logger.error("Gemini API Key is not set or is default. Gemini auto-responder will not work.")
            return

        try:
            genai.configure(api_key=GEMINI_API_KEY)
            self.gemini_model = genai.GenerativeModel(GEMINI_MODEL)
            logger.info(f"Gemini API initialized with model {GEMINI_MODEL}")
        except Exception as e:
            logger.error(f"Failed to initialize Gemini API: {e}")
            self.gemini_model = None # Ensure it's None if init fails

    async def _save_message_to_history(self, chat_id: int, sender_name: str, text: str):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞."""
        self.histories[chat_id].append(f"{sender_name}: {text}")

    async def _get_formatted_history(self, chat_id: int) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –ø—Ä–æ–º–ø—Ç."""
        return "\n".join(self.histories[chat_id])

    @loader.command("ii", outgoing=True)
    async def iicmd(self, message: Message):
        """
        .ii - –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ Gemini.
        –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
        """
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É .ii —Å—Ä–∞–∑—É –∂–µ
        await message.delete()

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –µ–≥–æ
        is_active = self.db.get("gemini_active", False)
        self.db.set("gemini_active", not is_active)

        status_text = "–≤–∫–ª—é—á–µ–Ω" if not is_active else "–≤—ã–∫–ª—é—á–µ–Ω"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        status_message = await utils.answer_messages(message, f"ü§ñ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ Gemini {status_text}!")
        await asyncio.sleep(2)
        await status_message.delete()

    @loader.watcher(only_messages=True, outgoing=False)
    async def gemini_watcher(self, message: Message):
        """
        –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫
        if not self.db.get("gemini_active", False):
            return

        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, —Å—Ç–∏–∫–µ—Ä—ã, –≥–∏—Ñ–∫–∏, –æ–ø—Ä–æ—Å—ã)
        if not message.text:
            return

        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–≤–æ–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.out:
            return

        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∫–æ–º–∞–Ω–¥ Hikka
        # (—á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∫ –≤–æ–ø—Ä–æ—Å—ã –∫ Gemini)
        if message.text.startswith(self.get_prefix()):
            return

        if not self.gemini_model:
            logger.warning("Gemini model is not initialized. Cannot respond.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
        sender_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
        if message.sender:
            sender_name = message.sender.first_name or message.sender.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
        await self._save_message_to_history(message.chat_id, sender_name, message.text)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
        formatted_history = await self._get_formatted_history(message.chat_id)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é (persona)
        # –û—Ç–∫–ª—é—á–µ–Ω–∞ –≤ generate_content –¥–ª—è –±–æ–ª–µ–µ —è–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ contents
        # system_instruction = (
        #     f"–î—É–º–∞–π —á—Ç–æ —Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å –Ω–∏–∫–Ω–µ–π–º–æ–º {MY_NICKNAME} "
        #     "–æ—Ç–≤–µ—á–∞–π –∫–∞–∫ 18 –ª–µ—Ç–Ω–∏–π —á–µ–ª–æ–≤–µ–∫ –∏ –ø–∏—à–∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã "
        #     "(—É–ø–æ–º–∏–Ω–∞–π –Ω–∏–∫–Ω–µ–π–º –∏ –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç)."
        # )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        user_question = message.text
        full_prompt_content = (
            f"(–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: {MAX_HISTORY_MESSAGES} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞ –∏–ª–∏ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ –µ—Å—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–º –Ω–∏–∫–Ω–µ–π–º: –∏ {MY_NICKNAME}: —Ç–æ –µ—Å—Ç—å —è)\n\n"
            f"–î—É–º–∞–π —á—Ç–æ —Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å –Ω–∏–∫–Ω–µ–π–º–æ–º {MY_NICKNAME} –æ—Ç–≤–µ—á–∞–π –∫–∞–∫ 18 –ª–µ—Ç–Ω–∏–π —á–µ–ª–æ–≤–µ–∫ –∏ –ø–∏—à–∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã "
            f"(—É–ø–æ–º–∏–Ω–∞–π –Ω–∏–∫–Ω–µ–π–º –∏ –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç) –∏ —Ç—ã –¥–æ–ª–∂–µ–Ω –∫–æ—Ä–æ—Ç–∫–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å: {user_question}\n"
            f"–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞: \n{formatted_history}" # –ü–æ–º–µ—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –∫–æ–Ω–µ—Ü, –∫–∞–∫ –≤ –≤–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ–º–ø—Ç–∞
        )

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Gemini API
            # –ï—Å–ª–∏ thinking_budget=0 –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, —É–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ
            response = await asyncio.to_thread( # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.to_thread –¥–ª—è –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –≤—ã–∑–æ–≤–æ–≤
                self.gemini_model.generate_content,
                contents=full_prompt_content,
                generation_config=types.GenerationConfig(
                    temperature=0.7, # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç 0 –¥–æ 1, 0 - –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, 1 - –±–æ–ª–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π
                ),
                safety_settings=[ # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_NONE"},
                ],
                #thinking_config=types.ThinkingConfig(thinking_budget=0) # –û—Ç–∫–ª—é—á–∞–µ–º "–º—ã—à–ª–µ–Ω–∏–µ" –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å lite-preview)
            )

            generated_text = response.text

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç Gemini –≤ –∏—Å—Ç–æ—Ä–∏—é
            await self._save_message_to_history(message.chat_id, MY_NICKNAME, generated_text)

            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await utils.answer_messages(message, generated_text)

        except Exception as e:
            logger.error(f"Error calling Gemini API: {e}", exc_info=True)
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API, –º–æ–∂–Ω–æ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            # await utils.answer_messages(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gemini.")